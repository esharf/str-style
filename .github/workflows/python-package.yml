# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        cache: 'poetry'
    - name: Install dependencies
      run: poetry install
    - name: Validate generated README 
      run: |
        poetry run python ./resources/gen_readme.py
        git diff --exit-code -- README.md
  
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-vertion: "3.8"
          - python-vertion: "3.9"
          - python-version: "3.10"
          - python-version: "3.11"
          - python-version: "3.12"
            upload-coverage: true

    steps:
    - uses: actions/checkout@v4
    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'
    - name: Install dependencies
      run: poetry install
    - name: Lint with flake8
      run: poetry run flake8 . --count --show-source --statistics
    - name: Test with pytest
      run: poetry run pytest --cov=strstyle --cov-fail-under=100 --cov-report=xml
    - name: Upload coverage reports to Codecov
      if: ${{ matrix.upload-coverage }}
      uses: 'codecov/codecov-action@v3'
      with:
        fail_ci_if_error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
